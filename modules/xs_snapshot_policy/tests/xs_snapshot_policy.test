<?php
/**
 * @file
 * Common test class file.
 */

/**
 * Common Simpletest class for all xenserver tests.
 */
class XenServerSnapshotPolicyTestCase extends XenServerTestCase {
  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'XenServer Snapshot Policy access',
      'description' => 'Tests users is able to only access their own snapshot policy .',
      'group' => 'XenServer',
    );
  }

  /**
   * {@inheritdoc}
   */
  protected function setUp() {
    // Create values for policy types.
    parent::setUp(array('xs', 'xs_snapshot_policy'));
  }

  /**
   * Test that user owning the server node can access policy page.
   */
  public function testUserAccessPolicyEntity() {
    $user = $this->drupalCreateUser(array(
      'view own xs_snapshot_policy entities',
      'perform own vm actions',
    ));
    $this->getServerNode($user);

    $this->drupalLogin($user);

    // Access the snapshot policies page as the user and ensure the form is
    // present.
    $this->drupalGet('node/' . $this->serverNode->nid . '/xs-snapshot-policy');
    $this->verbose($this->drupalGetContent());
    $this->assertResponse(200);
    $this->assertFieldByName('title');
    $this->assertFieldByName('type_id');
    $this->assertFieldByName('snapshots');
    $this->assertFieldById('edit-submit', XS_API_SNAPSHOT_CREATE_BUTTON_TITLE);
    $this->assertFieldById('edit-cancel', t('Cancel'));
  }

  /**
   * Test that user owning the server node can create policy.
   */
  public function testUserCreatePolicyEntity() {
    $this->createPolicyTypes();

    $user = $this->drupalCreateUser(array(
      'create xs_snapshot_policy entities',
      'view own xs_snapshot_policy entities',
      'perform own vm actions',
    ));

    $this->getServerNode($user);

    $this->drupalLogin($user);


    $policy_type = array_pop($this->policyTypes);
    $edit[0]['title'] = 'Policy ' . $policy_type->label;
    $edit[0]['type_id'] = $policy_type->id;
    $edit[0]['snapshots'] = 10;

    // Submit the new policy form and check if this worked.
    $this->drupalPost('node/' . $this->serverNode->nid . '/xs-snapshot-policy', $edit[0], XS_API_SNAPSHOT_CREATE_BUTTON_TITLE);
    $this->verbose($this->drupalGetContent());
    $this->assertResponse(200);
    $this->assertText(t('Successfully added new snapshots policy !title', array('!title' => $edit[0]['title'])));
    $this->assertText(t('Your server is protected'));
    $this->assertFieldByName('title');
    $this->assertFieldByName('type_id');
    $this->assertFieldByName('snapshots');
    $this->assertFieldById('edit-submit', t('Update'));
    $this->assertFieldById('edit-delete', t('Delete'));
    $this->assertFieldById('edit-cancel', t('Cancel'));
  }

  /**
   * Assert that wrong user cannot access somebody else's policy entity.
   */
  public function testWrongUserUnableAccessPolicyEntityPage() {
    $this->createPolicyTypes();

    $user = $this->drupalCreateUser(array(
      'create xs_snapshot_policy entities',
      'view own xs_snapshot_policy entities',
      'edit own xs_snapshot_policy entities',
      'perform own vm actions',
      'view xs_snapshot_policy log',
    ));

    $wrong_user = $this->drupalCreateUser(array(
      'create xs_snapshot_policy entities',
      'view own xs_snapshot_policy entities',
      'edit own xs_snapshot_policy entities',
      'perform own vm actions',
      'view xs_snapshot_policy log',
    ));

    $this->getServerNode($user);

    $this->drupalLogin($wrong_user);

    // Access the snapshot policies page as the user and ensure the form is
    // present.
    $this->drupalGet('node/' . $this->serverNode->nid . '/xs-snapshot-policy');
    $this->verbose($this->drupalGetContent());
    $this->assertResponse(403);
    $this->assertNoFieldByName('title');
    $this->assertNoFieldByName('type_id');
    $this->assertNoFieldByName('snapshots');
    $this->assertNoFieldById('edit-submit', XS_API_SNAPSHOT_CREATE_BUTTON_TITLE);
    $this->assertNoFieldById('edit-cancel', t('Cancel'));
  }

  /**
   * Tests that non-privileged user can't access policy type add/delete pages.
   */
  public function testNonAdminUserCannotDeletePolicyType() {
    $this->createPolicyTypes();

    $user = $this->drupalCreateUser(array(
      'create xs_snapshot_policy entities',
      'view own xs_snapshot_policy entities',
      'edit own xs_snapshot_policy entities',
      'perform own vm actions',
      'view xs_snapshot_policy log',
    ));
    $this->drupalLogin($user);

    $this->drupalGet('admin/xs/snapshot-policy-types/add');
    $this->verbose($this->drupalGetContent());
    $this->assertResponse(403);

    foreach ($this->policyTypes as $i => $type) {
      $this->drupalGet('admin/xs/snapshot-policy-types/' . $type->type . '/delete');
      $this->verbose($this->drupalGetContent());
      $this->assertResponse(403);

      $this->drupalGet('admin/xs/snapshot-policy-types/' . $type->type . '/edit');
      $this->verbose($this->drupalGetContent());
      $this->assertResponse(403);

      $this->drupalGet('admin/xs/snapshot-policy-types/' . $type->type . '/clone');
      $this->verbose($this->drupalGetContent());
      $this->assertResponse(403);
    }
  }
}
