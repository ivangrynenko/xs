<?php
/**
 * @file
 * xs_snapshot_policy entity classes.
 */

/**
 * Class SnapshotPolicyController
 */
class SnapshotPolicyController extends EntityAPIController {
  public function create(array $values = array()) {
    $values += array(
      'title' => '',
      'created' => REQUEST_TIME,
      'changed' => REQUEST_TIME,
      'snapshots' => XS_API_SNAPSHOTS_MAX,
    );
    return parent::create($values);
  }

  public function buildContent($entity, $view_mode = 'full', $langcode = NULL, $content = array()) {
    $wrapper = entity_metadata_wrapper('xs_snapshot_policy', $entity);
    $content['author'] = array('#markup' => t('Created by: !author', array('!author' => $wrapper->uid->name->value(array('sanitize' => TRUE)))));

    return parent::buildContent($entity, $view_mode, $langcode, $content);
  }

  public function load($ids = array(), $conditions = array()) {
    return parent::load($ids, $conditions); // TODO: Change the autogenerated stub
  }
}

/**
 * Class SnapshotPolicyTypeController
 */
class SnapshotPolicyTypeController extends EntityAPIControllerExportable {
  public function create(array $values = array()) {
    $values += array(
      'label' => '',
      'time' => '',
    );

    return parent::create($values);
  }

  /**
   * Save Snapshot Policy Type.
   */
  public function save($entity, DatabaseTransaction $transaction = NULL) {
    parent::save($entity, $transaction);
    // Rebuild menu registry. We do not call menu_rebuild directly, but set
    // variable that indicates rebuild in the end.
    // @see http://drupal.org/node/1399618
    variable_set('menu_rebuild_needed', TRUE);
  }
}

/**
 * Class SnapshotPolicyLogController
 */
class SnapshotPolicyLogController extends EntityAPIControllerExportable {
  public function create(array $values = array()) {
    $values += array(
      'policy_id' => '',
      'log' => '',
      'created' => REQUEST_TIME,
    );

    return parent::create($values);
  }
}

/**
 * Snapshot Policy class.
 */
class SnapshotPolicy extends Entity {
  public $spid;
  public $type_id;
  public $title;
  public $uid;
  public $target_id;
  public $snapshots;
  public $created;
  public $changed;
  public $last_run;

  protected function defaultLabel() {
    return $this->title;
  }
}

/**
 * Snapshot Policy Type class.
 */
class SnapshotPolicyType extends Entity {
  public $id;
  public $type;
  public $time;
  public $label;

  public function __construct($values = array()) {
    parent::__construct($values, 'xs_snapshot_policy_type');
  }

  function isLocked() {
    return isset($this->status) && empty($this->is_new) && (($this->status & ENTITY_IN_CODE) || ($this->status & ENTITY_FIXED));
  }
}

/**
 * Snapshot Policy Type class.
 */
class SnapshotPolicyLog extends Entity {
  public $id;
  public $policy_id;
  public $log;
  public $created;

  public function __construct($values = array()) {
    parent::__construct($values, 'xs_snapshot_policy_log');
  }
}

class SnapshotPolicyTypeUIController extends EntityDefaultUIController {
  /**
   * Overrides hook_menu() defaults.
   */
  public function hook_menu() {
    $items = parent::hook_menu();
    $items[$this->path]['description'] = 'Manage Snapshot Policy types.';
    return $items;
  }
}
